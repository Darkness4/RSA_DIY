import me.nguye.number.BigInt
import kotlin.time.ExperimentalTime

@ExperimentalTime
@ExperimentalUnsignedTypes
fun main() {
    val workingBase = 10

    val p = BigInt.valueOf("13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084171", workingBase)
    val q = BigInt.valueOf("13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084241", workingBase)
    val e = BigInt.valueOf("52224487813920772851484705774024104791041725032611188855422914385169436816446340185075407902663852671783148513920129269759675358456070367141485486466141735482277253659804041804890273942429837935659353075539833820029718824093277067899597404992298126900695606719490065832566430106728326912132689565599107834613", workingBase)
    val d = BigInt.valueOf("104055844167107781248589752608920442121435852413004719607463950823987312821132759166809988685882849660028713452809154247360580185712259277529373755633843749387184470871012615224812078370633557809434904918225321388120741945280206181683834799019246740113882929623211747709365319857181807977455643688718851270877", workingBase)
    val c1 = BigInt.valueOf("29075891562236853554062599128328159590183028980552101085544262704780053549534418578507236855720567419975163282590047789761592080601496152946952125090156744601158717295382511431523328696904736152776043566580142204885912443831792077784183631398221826664611547239837936198939692178263167338882034607609865731118", workingBase)
    val c2 = BigInt.valueOf("18843734104175461747620056345977644339191851013945250885633407629936001206924360108249391255994307246258972445193033936764824225343511129353256115730527634053372059460757473302517539364833128267263875409044686455385132768623440613529456243041634873615584800113654178971954173164382380348803475710656333741640", workingBase)
    val n = BigInt.valueOf("179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639477074095512480796227391561801824887394139579933613278628104952355769470429079061808809522886423955917442317693387325171135071792698344550223571732405562649211", workingBase)

    println("decripting")
    println(c1.modPow(d, n))
}
